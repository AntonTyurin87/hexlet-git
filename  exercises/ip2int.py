ip = '128.32.10.1'

ip_des = 2149583361

def ip2int(ip):
    mn = []
    strok = ''
    for i in range(len(ip)):
        if ip[i] != '.':
            strok += ip[i]
        else:
            mn += [strok]
            strok = ''
        if i == len(ip)-1:
            mn += [strok]
            strok = ''

    return int(mn[0])*256*256*256 + int(mn[1])*256*256 + int(mn[2])*256 + int(mn[3])


def int2ip(ip_des):
    return str(ip_des//(256*256*256)) + '.' + str((ip_des%(256*256*256))//(256*256)) + '.' + str(((ip_des%(256*256*256))%(256*256))//256) + '.' + str(((ip_des%(256*256*256))%(256*256))%256)


#print(ip2int(ip))

print(int2ip(ip_des))
'''
Реализуйте и экспортируйте функции ip2int() и int2ip(), которые преобразовывают представление IP-адреса из десятичного формата с точками 
в 32-битное число в десятичной форме и обратно.

Функция ip2int принимает на вход строку и должна возвращать число. А функция int2ip наоборот: принимает на вход число, а возвращает строку:

ip2int('128.32.10.1')
# 2149583361
ip2int('0.0.0.0')
# 0
ip2int('255.255.255.255')
# 4294967295

int2ip(2149583361)
# '128.32.10.1'
int2ip(0)
# '0.0.0.0'
int2ip(4294967295)
# '255.255.255.255'
Подсказки
IPv4
'''